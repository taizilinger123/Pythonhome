class  Person:
    name = 'swk'  #属性不应该写到类里,是自己的特性
    #类里的方法调用会默认传递一个参数，所以方法中至少需要一个形参
    def say_hello(self):
        #方法每次被调用时，解析器都会自动传递第一个参数
        #第一个参数，就是调用方法对象本身
        #如果是p1调的，则第一个参数就是p1对象
        #如果是p2调的，则第一个参数就是p2对象
        #一般我们都会将这个参数命名为self

        #在方法中不能直接使用类中的属性
        print('你好！我是%s' %self.name)

p1 = Person()   #p1是实例对象
p2 = Person()

#实例为什么能访问类中的属性和方法？因为类中定义的属性和方法都是公共的，任何该类的实例都可以访问
#print(p1.name)
#print(p2.name)

#属性和方法的查找流程：
#当我们调用一个对象的属性时，解析器会先在当前对象中寻找是否含有该属性，
# 如果有，则直接返回当前的对象的属性值
# 如有没有，则去当前对象的类的对象中去寻找，如果类里有则返回类对象的属性值，如果类里没有则报错！
# 一句话自己有的先调自己的，自己没有的就去类里找，类里也没有就报错
p1.name = '猪八戒'
p2.name = '孙悟空'
del  p2.name
#print(p1.name)
#print(p2.name)

p1.say_hello()
p2.say_hello()

#类对象和实例对象中的都可以保存属性（方法）
#如果这个属性（方法）是所有的实例共享的，则应该将其保存到类对象中
#如果这个属性（方法）是某个实例独有的，则应该保存到实例对象中

#一般情况下，属性保存到实例对象中，而方法需要保存到类对象中